# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [12.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm i
#     - run: npm run build --if-present
#     - run: npm start   




name: Node.js CI with Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build --if-present
    
    - name: Build and push Docker image
      uses: cloudposse/github-action-docker-build-push@master
      with:
        build_args: |
          --build-arg SOME_ARG=some_value
        tags: |
          latest
          1.0
          ${{ github.sha }}
        registry: docker.io
        login: "${{ secrets.DOCKERHUB_USERNAME }}"
        password: "${{ secrets.DOCKERHUB_PASSWORD }}"

    - name: Start Docker container
      run: |
        docker run -d -p 4000:80 \
          --name calculator_apps_container \
          calculator_apps:1.0

    - name: Wait for Docker container to start
      run: sleep 10

    # Add additional steps or commands as needed

    - name: Display Docker container logs (for debugging)
      run: docker logs calculator_apps_container

    # You can add more steps here as needed
    # - name: Display application URL
    #   run: echo "Application URL: http://localhost:3000"
