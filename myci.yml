# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [12.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm i
#     - run: npm run build --if-present
#     - run: npm start   




name: Node.js CI with Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build --if-present
    
    - name: Check out code
      uses: actions/checkout@v3
    - name: Build docker images
      run: docker build -t local .
    # - name: Start ngrok and expose port 4000
    #   run: |
    #     wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
    #     unzip ngrok-stable-linux-amd64.zip
    #     chmod +x ngrok
    #     ./ngrok authtoken "$NGROK_AUTH_TOKEN"
    #     ./ngrok http 4000 > ngrok_output &
    #   env:
    #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    # - name: Wait for ngrok to start
    #   run: sleep 10
    # - name: Extract ngrok URL
    #   id: ngrok
    #   run: |
    #     ngrok_url=$(awk -F " " '/^Forwarding/ {print $2}' ngrok_output)
    #     echo "NGROK_URL=$ngrok_url" >> $GITHUB_ENV
    #     echo $ngrok_url > ngrok_url.txt

    # - name: Display ngrok URL
    #   run: cat ngrok_output
    # - name: Run ngrok locally
    #   run: |
    #     bin/ngrokd -tlsKey=device.key -tlsCrt=device.crt -domain=localhost -httpAddr=":8000" -httpsAddr=":8001"

    # You can add more steps here as needed
    # - name: Display application URL
    #   run: echo "Application URL: http://localhost:3000"

    - name: Deploy with gh-pages
      run: |
      git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
      npx gh-pages -d build -u "github-actions-bot <support+actions@github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}